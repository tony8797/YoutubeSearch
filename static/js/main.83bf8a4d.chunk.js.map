{"version":3,"sources":["redux/YoutubeSearch/reducers.js","redux/root-reducer.js","redux/YoutubeSearch/sagas.js","redux/root-saga.js","redux/store.js","ErrorBoundary.js","router.js","App.js","serviceWorker.js","index.js","config/youtube.config.js","redux/YoutubeSearch/actions.js"],"names":["initState","searcText","totalCount","result","loading","error","favoriteIds","favoriteItemList","favoritePage","combineReducers","YoutubeSearch","state","action","type","actions","YOUTUBE_SEARCH","payload","YOUTUBE_SUCCESS_RESULT","prevPageToken","nextPageToken","FAVORITE_LIST","FAVORITE_ITEM_LIST","console","log","YOUTUBE_ERROR_RESULT","searchRequest","rootSaga","youtubeSearchURL","youtubeSearchApi","youtubeSearchVideoURL","onSearchReqeust","pageToken","a","fetch","encodeURIComponent","then","res","json","catch","onSearchVideoTimeReqeust","videoIds","call","searchResult","items","forEach","element","id","videoId","substring","length","searchVideoTimeResult","videoTimeMap","ele","duration","contentDetails","index","put","youtubeSearchSuccess","pageInfo","totalResults","all","takeEvery","getState","youtubeSearchSagas","middleware","sagaMiddleware","createSagaMiddleware","middlewares","store","createStore","rootReducer","applyMiddleware","run","ErrorBoundary","props","hasError","this","children","React","Component","publicRoutes","path","component","lazy","Routes","fallback","map","route","exact","key","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","youtubeSearch","onPageChange","onChangeFavorite","onChangeFavoriteItemList","youtubeSearchError"],"mappings":"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","file":"static/js/main.83bf8a4d.chunk.js","sourcesContent":["import actions from './actions';\n\nconst initState = {\n  searcText: '鬼滅',\n  totalCount: 0,\n  result: [],\n  loading: false,\n  error: false,\n  favoriteIds: [],\n  favoriteItemList: [],\n  favoritePage: true,\n};\n\nexport default function reducer(state = initState, action) {\n  switch (action.type) {\n    case actions.YOUTUBE_SEARCH:\n      return {\n        ...state,\n        loading: true,\n        searcText: action.payload.searcText,\n      };\n    case actions.YOUTUBE_SUCCESS_RESULT:\n      return {\n        ...state,\n        loading: false,\n        error: false,\n        result: action.result,\n        totalCount: action.totalCount,\n        prevPageToken: action.prevPageToken,\n        nextPageToken: action.nextPageToken,\n      };\n    case actions.FAVORITE_LIST:\n      return {\n        ...state,\n        favoriteIds: action.favoriteIds,\n      };\n    case actions.FAVORITE_ITEM_LIST:\n        console.log({action});\n        return {\n          ...state,\n          favoriteItemList: action.favoriteItemList,\n        };\n    case actions.YOUTUBE_ERROR_RESULT:\n      return {\n        ...state,\n        loading: false,\n        error: false,\n        result: [],\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport YoutubeSearch from './YoutubeSearch/reducers';\n\nexport default combineReducers({\n  YoutubeSearch,\n});\n","import { all, takeEvery, put, call } from 'redux-saga/effects';\nimport actions from './actions';\nimport youtubeSearchApi from '../../config/youtube.config';\nconst maxResults = 12;\nconst youtubeSearchURL = `https://www.googleapis.com/youtube/v3/search?part=snippet&maxResults=${maxResults}&type=video&key=${youtubeSearchApi}`;\n// const youtubeSearchVideoURL = `https://www.googleapis.com/youtube/v3/videos?part=snippet,contentDetails&chart=mostPopular&maxResults=${maxResults}&key=${youtubeSearchApi}`;\nconst youtubeSearchVideoURL = `https://www.googleapis.com/youtube/v3/videos?part=contentDetails&maxResults=${maxResults}&key=${youtubeSearchApi}`;\n\nconst onSearchReqeust = async (searcText, pageToken) =>\n  await fetch(\n    `${youtubeSearchURL}&q=${encodeURIComponent(searcText)}${pageToken}`\n  )\n    .then(res => res.json())\n    .then(res => res)\n    .catch(error => error);\n\n  const onSearchVideoTimeReqeust = async (videoIds) =>\n  await fetch(\n    `${youtubeSearchVideoURL}&id=${encodeURIComponent(videoIds)}`\n  )\n    .then(res => res.json())\n    .then(res => res)\n    .catch(error => error);\n\n\nfunction* searchRequest({ payload }) {\n  const { searcText, pageToken } = payload;\n  try {\n    // search video\n    const searchResult = yield call(\n      onSearchReqeust,\n      searcText,\n      pageToken ? `&pageToken=${pageToken}` : ''\n    );\n    \n    // get video time and other data\n    let videoIds = '';\n    searchResult.items.forEach(element => {\n      videoIds+=element.id.videoId+\",\";\n    });\n    videoIds.substring(0, videoIds.length-1);\n\n    const searchVideoTimeResult = yield call(\n      onSearchVideoTimeReqeust,\n      videoIds\n    );\n\n    let videoTimeMap = {};\n    searchVideoTimeResult.items.forEach(ele=> {\n      let {duration} = ele.contentDetails\n      videoTimeMap[ele.id] = duration;\n    });\n\n    searchResult.items.forEach((ele, index) => {\n      searchResult.items[index].duration = videoTimeMap[ele.id.videoId];\n    });\n\n    if (searchResult.items) {\n      yield put(\n        actions.youtubeSearchSuccess(\n          searchResult.items,\n          searchResult.pageInfo.totalResults,\n          searchResult.nextPageToken,\n          searchResult.prevPageToken,\n        ),\n      );\n    } else {\n      yield put(actions.youtubeSearchSuccess());\n    }\n  } catch (error) {\n    yield put(actions.youtubeSearchSuccess());\n  }\n}\nexport default function* rootSaga() {\n  yield all([takeEvery(actions.YOUTUBE_SEARCH, searchRequest)]);\n}\n","import { all } from 'redux-saga/effects';\nimport youtubeSearchSagas from './YoutubeSearch/sagas';\nexport default function* rootSaga(getState) {\n  yield all([\n    youtubeSearchSagas(),\n  ]);\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport rootReducer from './root-reducer';\nimport rootSaga from './root-saga';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\nconst bindMiddleware = middleware => {\n  return applyMiddleware(...middleware);\n};\nconst store = createStore(rootReducer, bindMiddleware(middlewares));\nsagaMiddleware.run(rootSaga);\nexport { store };\n","import React from 'react';\nclass ErrorBoundary extends React.Component {\n  // 頁面載入若失敗則顯示 loading failed 反之則渲染 this.props.children\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <p>Loading failed! Please reload.</p>;\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React, { lazy, Suspense } from 'react';\nimport {\n  Route,\n  BrowserRouter as Router,\n  Switch,\n} from 'react-router-dom';\nimport ErrorBoundary from './ErrorBoundary';\n// import Loader from '@iso/components/utility/loader';\nimport { Spin } from 'antd';\n\n// 路徑設定\nconst publicRoutes = [\n  {\n    path: '/YoutubeSearch/',\n    component: lazy(() => import('./containers/YoutubeSearch/YoutubeSearch')),\n  },\n  {\n    path: '/YoutubeSearch/favoriteList',\n    component: lazy(() => import('./containers/YoutubeSearch/FavoriteList')),\n  },\n];\n\nexport default function Routes() {\n  return (\n    <ErrorBoundary>\n      <Suspense fallback={<Spin />}>\n        <Router>\n          <Switch>\n            {publicRoutes.map((route, index) => (\n              <Route exact={route.exact} key={index} path={route.path}>\n                <route.component />\n              </Route>\n            ))}\n          </Switch>\n        </Router>\n      </Suspense>\n    </ErrorBoundary>\n  );\n}\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\nimport Routes from './router';\nimport \"antd/dist/antd.css\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <>\n        <Routes />\n      </>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// const youtubeSearchApi = 'AIzaSyDkho4IpIg5-fk2RqyypMHzP4A0wwdeVOk';\nconst youtubeSearchApi = 'AIzaSyD5OVzgELEoAd5GlUnq5TaQ9ZwRiffGF4M';\nexport default youtubeSearchApi;\n\n\n","const actions = {\n    YOUTUBE_SEARCH: 'YOUTUBE_SEARCH',\n    YOUTUBE_SUCCESS_RESULT: 'YOUTUBE_SUCCESS_RESULT',\n    YOUTUBE_ERROR_RESULT: 'YOUTUBE_ERROR_RESULT',\n    FAVORITE_LIST: 'FAVORITE_LIST',\n    FAVORITE_ITEM_LIST: 'FAVORITE_ITEM_LIST',\n    youtubeSearch: searcText => ({\n      type: actions.YOUTUBE_SEARCH,\n      payload: { searcText },\n    }),\n    onPageChange: (searcText, pageToken) => ({\n      type: actions.YOUTUBE_SEARCH,\n      payload: { searcText, pageToken },\n    }),\n    youtubeSearchSuccess: (\n      result,\n      totalCount,\n      nextPageToken,\n      prevPageToken,\n    ) => ({\n      type: actions.YOUTUBE_SUCCESS_RESULT,\n      result,\n      totalCount,\n      nextPageToken,\n      prevPageToken,\n    }),\n    onChangeFavorite: (favoriteIds) => ({\n      type: actions.FAVORITE_LIST,\n      favoriteIds\n    }),\n    onChangeFavoriteItemList: (favoriteItemList) => ({\n      type: actions.FAVORITE_ITEM_LIST,\n      favoriteItemList\n    }),\n    youtubeSearchError: () => ({\n      type: actions.YOUTUBE_ERROR_RESULT,\n    }),\n  };\n  export default actions;\n  "],"sourceRoot":""}