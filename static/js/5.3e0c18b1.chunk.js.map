{"version":3,"sources":["containers/YoutubeSearch/YoutubeSearch.style.js","containers/YoutubeSearch/PlayYoutubeVideo.js","assets/styles/constants.js","components/boxTitle.style.js","components/boxTitle.js","components/box.style.js","components/box.js","components/layoutWrapper.style.js","components/layoutWrapper.js","components/pageHeader.style.js","components/pageHeader.js","components/NoApiKey.style.js","components/noApiKey.js","../node_modules/@ant-design/icons-svg/es/asn/HomeOutlined.js","../node_modules/@ant-design/icons/es/icons/HomeOutlined.js","containers/YoutubeSearch/FavoriteList.js"],"names":["YoutubeSearchListStyleWrapper","styled","div","palette","YoutubeSearchStyleWrapper","YoutubeModal","ComponentName","ModalWrapper","Modal","selectedVideo","handleCancel","title","snippet","tittle","visible","footer","onCancel","cancelText","className","width","videoId","id","opts","playerVars","autoplay","basicStyle","rowStyle","display","flexFlow","colStyle","marginBottom","gutter","BoxTitle","h3","BoxSubTitle","p","props","subtitle","BoxWrapper","style","children","LayoutContentWrapper","ComponentTitleWrapper","h1","HelperText","height","HomeOutlined","ref","React","createElement","AntdIcon","Object","assign","icon","HomeOutlinedSvg","displayName","forwardRef","onChangeFavorite","actions","onChangeFavoriteItemList","FavoriteList","YoutubeSearch","useSelector","state","dispatch","useDispatch","favoriteIds","favoriteItemList","useState","setSelectrdVideo","handleSelectedVideo","useEffect","initFavoriteIds","localStorage","getItem","initFavoriteItemList","split","JSON","parse","onClickFavorite","useCallback","item","event","preventDefault","stopPropagation","includes","splice","indexOf","indexOfList","findIndex","element","push","setItem","join","stringify","justify","md","sm","xs","youtubeSearchApi","minHeight","length","to","twoToneColor","PlayYoutubeVideo","map","publishedAt","channelTitle","thumbnails","description","timeString","duration","timeStringArr","replace","i","updateDate","moment","format","heartTwoToneColor","key","onClick","e","alt","src","high","url","HeartTwoTone","window","open","href"],"mappings":"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","file":"static/js/5.3e0c18b1.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport { palette } from 'styled-theme';\n  \nconst YoutubeSearchListStyleWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: flex-start;\n  flex-direction: row;\n  flex-wrap:wrap;\n\n  .singleVideoResult {\n    padding: 20px 0;\n    display: flex;\n    flex-direction: column;\n    width: calc(100% / 4 - 10px);\n    cursor: pointer;\n\n    @media only screen and (min-width: 768px) and (max-width: 1199px) {\n      width: calc(100% / 3 - 10px);\n    }\n    @media only screen and (max-width: 767px) {\n      width: calc(100% / 2 - 10px);\n    }\n\n    &:last-of-type {\n      border-bottom: 0;\n    }\n\n    .videoThumb {\n      width: 100%;\n      max-height: 360px;\n      min-height: 90px;\n      display: -webkit-inline-flex;\n      display: -ms-inline-flex;\n      display: inline-flex;\n      align-items: center;\n      justify-content: center;\n      flex-shrink: 0;\n      overflow: hidden;\n      padding:5px;\n      position: relative;\n\n      @media only screen and (max-width: 420px) {\n        width: 200px;\n        height: 200px;\n      }\n\n      .favoriteIcon {\n        position: absolute;\n        top: 10px;\n        right: 10px;\n        z-index: 99;\n        font-size: 24px;\n      }\n\n      .videoTime {\n        position: absolute;\n        bottom: 10px;\n        right: 10px;\n        z-index: 99;\n        font-size: 12px;\n        color: white;\n        background-color: #5a5959;\n        padding: 0 2px;\n        border-radius: 2px;\n      }\n      \n      figcaption {\n        position: absolute;\n        top: 0;\n        left: 0;\n        border-radius: 4px;\n        width: calc(100% - 10px);\n        height: calc(100% - 10px);\n        margin: 5px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        background-color: rgba(0, 0, 0, 0.8);\n        opacity: 0;\n        visibility: hidden;\n        transition: all 0.1s ease;\n        text-align: center;\n\n        ul {\n          margin: 0;\n          padding: 0;\n          display: flex;\n          align-items: center;\n          li {\n            display: inline-flex;\n            align-items: center;\n            margin: 0 20px;\n            color: #ffffff;\n            font-size: 16px;\n            font-weight: 400;\n            svg {\n              width: auto;\n              height: 18px;\n              margin-left: 10px;\n            }\n            &:first-child {\n              margin-left: 0;\n            }\n            &:last-child {\n              margin-right: 0;\n            }\n          }\n        };\n        #videoHoverDescription {\n            color: white;\n            flex-direction: column;\n            div {\n                flex: 1;\n                margin: 5px;\n                display: flex;\n                justify-content: center;\n                align-items: center;\n                color: white;\n            }\n            .desc {\n              overflow:hidden;\n              white-space: nowrap;\n              text-overflow: ellipsis;\n              display: -webkit-box;\n              -webkit-line-clamp: 4;\n              -webkit-box-orient: vertical;\n              white-space: normal;\n              word-break: break-all;\n            }\n        }\n      }\n\n      &:hover {\n        figcaption {\n          opacity: 1;\n          visibility: visible;\n        }\n      }\n      \n      img {\n        width: 100%;\n        height: 100%;\n        object-fit: cover;\n      }\n    }\n\n    .videoDescription {\n        display: flex;\n        flex-direction: column;\n        width: 100%;\n        margin: 0 0 0 5px;\n        cursor: pointer;\n\n        h3.videoName {\n            width: 90%;\n            flex-shrink: 0;\n            margin: 0;\n\n            @media only screen and (max-width: 767px) {\n                width: 100%;\n            }\n\n            @media only screen and (min-width: 768px) and (max-width: 1199px) {\n                flex-shrink: 1;\n            }\n\n            a {\n                font-size: 14px;\n                font-weight: 400;\n                color: ${palette('text', 0)};\n                line-height: 1;\n                word-break: break-word;\n                overflow: hidden;\n                width: calc(100% - 10px);\n                white-space: nowrap;\n                text-overflow: ellipsis;\n                display: inline-block;\n                text-decoration: none;\n\n                &:hover {\n                    color: ${palette('primary', 0)};\n                }\n            }\n        }\n\n        p {\n            font-size: 14px;\n            font-weight: 400;\n            color: ${palette('text', 3)};\n            line-height: 1.3;\n            margin-bottom: 0;\n            margin-top: 10px;\n            display: block;\n            word-break: break-word;\n        }\n    }\n  }\n`;\nconst YoutubeSearchStyleWrapper = styled.div`\n  margin-top: 30px;\n  \n  .totalResultFind {\n    font-size: 18px;\n    font-weight: 700;\n    color: ${palette('text', 0)};\n    line-height: 1.3;\n    padding-bottom: 15px;\n    border-bottom: 1px solid ${palette('border', 2)};\n  }\n\n  .linkBtn {\n    color: white;\n    float: right;\n  }\n\n  .youtubeSearchPagination {\n    display: -webkit-flex;\n    display: -ms-flex;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin: 25px 0 10px;\n\n    button {\n      margin: 0 10px;\n    }\n  }\n`;\n\nconst YoutubeModal = ComponentName => styled(ComponentName)`\n  .ant-modal-close-x {\n    width: 35px;\n    height: 35px;\n    line-height: 35px;\n    background-color: #fff;\n    border-radius: 0 0 0 5px;\n  }\n\n  .ant-modal-body {\n    padding: 15px;\n    iframe {\n      width: 100%;\n    }\n  }\n`;\n\nexport {\n  YoutubeSearchListStyleWrapper,\n  YoutubeSearchStyleWrapper,\n  YoutubeModal,\n};","import React from 'react';\nimport YouTube from 'react-youtube';\nimport { Modal } from 'antd';\nimport { YoutubeModal } from './YoutubeSearch.style';\n\nconst ModalWrapper = YoutubeModal(Modal);\n\nexport default function({ selectedVideo, handleCancel }) {\n  const ops = { playerVars: { autoplay: 1 } };\n  return (\n    <ModalWrapper\n      title={selectedVideo.snippet.tittle}\n      visible={true}\n      footer={null}\n      onCancel={handleCancel}\n      cancelText=\"Cancel\"\n      className=\"youtubeVideoModal\"\n      width=\"670px\"\n    >\n      <div />\n      <YouTube videoId={selectedVideo.id.videoId} opts={ops} />\n    </ModalWrapper>\n  );\n}\n","export const colors = {\n    blue: {\n      deep: 'rgb(0, 121, 191)',\n      light: 'lightblue',\n      lighter: '#d9fcff',\n      soft: '#E6FCFF',\n    },\n    black: '#4d4d4d',\n    shadow: 'rgba(0,0,0,0.2)',\n    grey: {\n      darker: '#C1C7D0',\n      dark: '#E2E4E6',\n      medium: '#DFE1E5',\n      N30: '#EBECF0',\n      light: '#F4F5F7',\n    },\n    green: 'rgb(185, 244, 188)',\n    white: 'white',\n    purple: 'rebeccapurple',\n    orange: '#FF991F',\n  };\n  export const grid = 8;\n  \n  export const borderRadius = 2;\n  const rowStyle = {\n    width: '100%',\n    display: 'flex',\n    flexFlow: 'row wrap',\n  };\n  const colStyle = {\n    marginBottom: '16px',\n    width: '100%'\n  };\n  const gutter = 16;\n  \n  const basicStyle = {\n    rowStyle,\n    colStyle,\n    gutter,\n  };\n  export default basicStyle;\n  ","import styled from 'styled-components';\nimport { palette } from 'styled-theme';\n\nconst BoxTitle = styled.h3`\n  font-size: 14px;\n  font-weight: 500;\n  color: ${palette('text', 0)};\n  margin: 0;\n  margin-bottom: 5px;\n`;\n\nconst BoxSubTitle = styled.p`\n  font-size: 13px;\n  font-weight: 400;\n  color: ${palette('text', 3)};\n  line-height: 24px;\n`;\n\nexport { BoxTitle, BoxSubTitle };\n","import React from 'react';\nimport { BoxTitle, BoxSubTitle } from './boxTitle.style.js';\n\nexport default props => {\n  return (\n    <div>\n      {props.title ? (\n        <BoxTitle> {props.title} </BoxTitle>\n      ) : (\n        ''\n      )}\n      {props.subtitle ? (\n        <BoxSubTitle> {props.subtitle} </BoxSubTitle>\n      ) : (\n        ''\n      )}\n    </div>\n  );\n};\n","import styled from 'styled-components';\nimport { palette } from 'styled-theme';\n\nconst BoxWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  padding: 0 20px;\n  background-color: #ffffff;\n  /* border: 1px solid ${palette('border', 0)}; */\n  margin: 0 0 30px;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n  \n  &.half {\n    width: calc(50% - 34px);\n    @media (max-width: 767px) {\n      width: 100%;\n    }\n  }\n`;\n\nexport { BoxWrapper };\n","import React from 'react';\nimport BoxTitleWrapper from './boxTitle';\nimport { BoxWrapper } from './box.style';\n\nexport default props => (\n  <BoxWrapper\n    style={props.style}\n  >\n    <BoxTitleWrapper title={props.title} subtitle={props.subtitle} />\n    {props.children}\n  </BoxWrapper>\n);\n","import styled from 'styled-components';\n\nconst LayoutContentWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-flow: row wrap;\n  overflow: hidden;\n\n  @media only screen and (max-width: 767px) {\n    /* padding: 50px 20px; */\n  }\n\n  @media (max-width: 580px) {\n    /* padding: 15px; */\n  }\n`;\n\nexport { LayoutContentWrapper };\n","import React from 'react';\nimport { LayoutContentWrapper } from './layoutWrapper.style';\n\nexport default props => (\n  <LayoutContentWrapper\n    {...props}\n  >\n    {props.children}\n  </LayoutContentWrapper>\n);\n","import styled from 'styled-components';\nimport { palette } from 'styled-theme';\nconst ComponentTitleWrapper = styled.h1`\n  font-size: 19px;\n  font-weight: 500;\n  background-color: ${palette('secondary', 0)};\n  padding: 5px 0;\n  min-height: 50px;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  white-space: nowrap;\n  \n  .headerSearch {\n    width: 500px;\n    position: relative;\n    left: 50%;\n    transform: translate(-50%, 0);\n\n    @media only screen and (max-width: 767px) {\n      width: 300px;\n    }\n  }\n  .favoriteHeadTitle {\n    position: relative;\n    left: 50%;\n    transform: translate(-50%, 0);\n    color: #ffffff;\n  }\n`;\n\nexport { ComponentTitleWrapper };\n","import React from 'react';\nimport { ComponentTitleWrapper } from './pageHeader.style';\n\nexport default props => (\n  <ComponentTitleWrapper>\n    {props.children}\n  </ComponentTitleWrapper>\n);\n","import styled from 'styled-components';\nimport { palette } from 'styled-theme';\n\nconst HelperText = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  \n  h3 {\n    font-size: 18px;\n    font-weight: 500;\n    color: ${palette('text', 2)};\n    margin: 0;\n  }\n`;\n\nexport default HelperText;\n","import React from 'react';\nimport HelperText from './NoApiKey.style';\n\nexport default ({ width = '100%', height = '40vh' }) => (\n  <HelperText style={{ width, height }}>\n    <h3>Please Enter Your API Key in the `src/settings/index.js`</h3>\n  </HelperText>\n);\n","// This icon file is generated automatically.\n// tslint:disable\nvar HomeOutlined = { \"name\": \"home\", \"theme\": \"outlined\", \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M946.5 505L560.1 118.8l-25.9-25.9a31.5 31.5 0 00-44.4 0L77.5 505a63.9 63.9 0 00-18.8 46c.4 35.2 29.7 63.3 64.9 63.3h42.5V940h691.8V614.3h43.4c17.1 0 33.2-6.7 45.3-18.8a63.6 63.6 0 0018.7-45.3c0-17-6.7-33.1-18.8-45.2zM568 868H456V664h112v204zm217.9-325.7V868H632V640c0-22.1-17.9-40-40-40H432c-22.1 0-40 17.9-40 40v228H238.1V542.3h-96l370-369.7 23.1 23.1L882 542.3h-96.1z\" } }] } };\nexport default HomeOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport React from 'react';\nimport HomeOutlinedSvg from \"@ant-design/icons-svg/es/asn/HomeOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar HomeOutlined = function HomeOutlined(props, ref) {\n  return React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: HomeOutlinedSvg\n  }));\n};\n\nHomeOutlined.displayName = 'HomeOutlined';\nexport default React.forwardRef(HomeOutlined);","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Row, Col, Button } from 'antd';\nimport { HeartTwoTone, HomeOutlined } from '@ant-design/icons';\nimport PageHeader from '../../components/pageHeader';\nimport Box from '../../components/box';\nimport LayoutWrapper from '../../components/layoutWrapper';\nimport basicStyle from '../../assets/styles/constants';\nimport actions from '../../redux/YoutubeSearch/actions';\nimport NoAPIKey from '../../components/noApiKey';\nimport youtubeSearchApi from '../../config/youtube.config';\nimport PlayYoutubeVideo from './PlayYoutubeVideo';\nimport moment from 'moment';\n\nimport {\n  YoutubeSearchListStyleWrapper,\n  YoutubeSearchStyleWrapper,\n} from './YoutubeSearch.style';\n\nconst { \n  onChangeFavorite,\n  onChangeFavoriteItemList } = actions;\n\nexport default function FavoriteList() {\n  const YoutubeSearch = useSelector(state => state.YoutubeSearch);\n  const dispatch = useDispatch();\n  const { favoriteIds, favoriteItemList } = YoutubeSearch;\n  const [selectedVideo, setSelectrdVideo] = React.useState(null);\n  const handleCancel = () => {\n    handleSelectedVideo(null);\n  };\n  const handleSelectedVideo = selectedVideo => {\n    setSelectrdVideo(selectedVideo);\n  };\n\n  // 播放影片\n  const onClick = (item, event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    handleSelectedVideo(item);\n  };\n\n  // 初始化收藏影片\n  React.useEffect(() => {\n    let initFavoriteIds = localStorage.getItem('favoriteIds');\n    let initFavoriteItemList = localStorage.getItem('favoriteItemList');\n\n    if(initFavoriteIds) {\n      dispatch(onChangeFavorite(initFavoriteIds.split(',')));\n      dispatch(onChangeFavoriteItemList( JSON.parse(initFavoriteItemList.split(',') )));\n    }\n  }, [dispatch]);\n\n  // 收藏選取及取消\n  const onClickFavorite = React.useCallback(\n    (videoId, item, event) => {\n      event.preventDefault();\n      event.stopPropagation();\n      if(favoriteIds.includes(videoId)) {\n        favoriteIds.splice(favoriteIds.indexOf(videoId), 1);\n        let indexOfList = favoriteItemList.findIndex((element) => element.id.videoId === videoId);\n        favoriteItemList.splice(indexOfList, 1);\n      } else {\n        favoriteIds.push(videoId);\n        favoriteItemList.push(item);\n      }\n      localStorage.setItem('favoriteIds', favoriteIds.join(','));\n      localStorage.setItem('favoriteItemList', JSON.stringify(favoriteItemList));\n\n      dispatch(onChangeFavorite(favoriteIds));\n      dispatch(onChangeFavoriteItemList(favoriteItemList));\n  },[dispatch, favoriteIds, favoriteItemList]);\n  \n  const { rowStyle, colStyle, gutter } = basicStyle;\n\n  return (\n    <>\n      <PageHeader>\n        <div className=\"favoriteHeadTitle\">收藏列表</div>\n      </PageHeader>\n      <LayoutWrapper>\n        <Row style={rowStyle} gutter={gutter} justify=\"start\">\n          <Col md={24} sm={24} xs={24} style={colStyle}>\n            {youtubeSearchApi ? (\n              <Box style={{ minHeight: 220 }}>\n                <YoutubeSearchStyleWrapper className=\"isoYoutubeSearchResult\">\n                  <p className=\"totalResultFind\">\n                    <span>{`已收藏 ${favoriteItemList.length} 部影片`}</span>\n                    <Link className=\"linkBtn\" to={`/youtube`}>\n                      <Button icon={<HomeOutlined className=\"favoriteIcon\" twoToneColor=\"#eb2f96\" />}>\n                        首頁\n                      </Button>\n                    </Link>\n                  </p>\n\n                  {selectedVideo ? (\n                    <PlayYoutubeVideo\n                      selectedVideo={selectedVideo}\n                      handleCancel={handleCancel}\n                    />\n                  ) : (\n                    ''\n                  )}\n\n                  <YoutubeSearchListStyleWrapper className=\"youtubeResultList\">\n                    {\n                      favoriteItemList.length > 0 ?\n                        favoriteItemList.map(item => {\n                          const {\n                            publishedAt,\n                            title,\n                            channelTitle,\n                            thumbnails,\n                            description,\n                          } = item.snippet;\n                          \n                          let timeString = \"\";\n                          \n                          if(item.duration) {\n                            const { duration } = item;\n                            let timeStringArr = duration.replace(/PT|S/g, '').split(/H|M/g);\n\n                            for(let i=0; i< timeStringArr.length; i++) {\n                              if(timeStringArr[i].length === '0') timeStringArr[i] = \"00\";\n                              else if(timeStringArr[i]< 10) timeStringArr[i] = `0${timeStringArr[i]}`;\n                            }\n                            timeString = timeStringArr.join(\":\");\n                          }\n\n                          const id = item.id.videoId;\n                          const updateDate = moment(publishedAt).format('YYYY/MM/DD');\n\n                          const onClickVideo = event => {\n                            event.preventDefault();\n                            event.stopPropagation();\n                            window.open(`https://www.youtube.com/watch?v=${item.id.videoId}`, '_blank');\n                          };\n                          \n                          // favorite icon color\n                          let heartTwoToneColor = favoriteIds.includes(id)? \"#eb2f96\": \"#000000\";\n\n                          return (\n                            <div key={id} className=\"singleVideoResult\" onClick={(e) => onClick(item, e)}>\n                              <div className=\"videoThumb\">\n                                <img alt=\"#\" src={thumbnails.high.url} />\n                                  <HeartTwoTone className=\"favoriteIcon\" \n                                    twoToneColor={heartTwoToneColor} \n                                    onClick={(e) => onClickFavorite(id, item, e)} \n                                  />\n                                  <div className=\"videoTime\">{timeString}</div>\n                                <figcaption>\n                                  <div id=\"videoHoverDescription\">\n                                    <div className=\"desc\">{description.length > 0 ? description : 'no description'}</div>\n                                    <div><b>{`${channelTitle}`}</b></div>\n                                    <div>{updateDate}</div>\n                                  </div>\n                                </figcaption>\n                              </div>\n\n                              <div className=\"videoDescription\" onClick={onClickVideo}>\n                                <h3 className=\"videoName\">\n                                  <a href=\"# \">{`${title} `}</a>\n                                </h3>\n                              </div>\n                            </div>\n                          );\n                        }): null\n                    }\n                  </YoutubeSearchListStyleWrapper>\n                </YoutubeSearchStyleWrapper>\n              </Box>\n            ) : (\n              <NoAPIKey />\n            )}\n          </Col>\n        </Row>\n      </LayoutWrapper>\n    </>\n  );\n}\n"],"sourceRoot":""}